{"version":3,"sources":["components/App/App.styled.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.js","index.js"],"names":["Container","styled","div","List","ul","Item","li","Statistics","good","neutral","bad","total","positivePercentage","Button","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","name","Title","h1","Wrapper","Section","title","children","Notification","message","App","state","onLeaveFeedbackButton","event","target","setState","this","positiveFeedback","countTotalFeedback","Math","round","Object","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEaA,EAAYC,IAAOC,IAAV,wWCATC,EAAOF,IAAOG,GAAV,4EAKJC,EAAOJ,IAAOK,GAAV,8I,cCHF,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,eAACT,EAAD,WACE,eAACE,EAAD,WACE,cAAC,IAAD,IADF,UACqBG,KAErB,eAACH,EAAD,WACE,cAAC,IAAD,IADF,aAC0BI,KAE1B,eAACJ,EAAD,WACE,cAAC,IAAD,IADF,SACkBK,KAElB,eAACL,EAAD,qBAAcM,KACd,eAACN,EAAD,iCAA0BO,EAA1B,UCrBC,I,IAAMC,EAASZ,IAAOa,OAAV,wrBCCJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,cAACN,EAAD,CAEEO,KAAK,SACLC,QAASJ,EACTK,KAAMH,EAJR,SAMGA,GALIA,QCNR,IAAMI,EAAQtB,IAAOuB,GAAV,6IAOLC,EAAUxB,IAAOC,IAAV,kDCPL,SAASwB,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACH,EAAD,WACE,cAACF,EAAD,UAAQI,IACPC,KCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,ICKQC,E,4MACnBC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAgBPuB,sBAAwB,SAACC,GACvB,IAAMC,EAASD,EAAMC,OACrB,EAAKC,SAAL,eACGD,EAAOb,KAAO,EAAKU,MAAOG,EAAOb,MAAQ,K,wDAhB9C,WACE,MAA+Be,KAAKL,MACpC,OADA,EAAQxB,KAAR,EAAcC,QAAd,EAAuBC,M,6CAKzB,WACE,IAAM4B,EACH,IAAMD,KAAKL,MAAMxB,KAAQ6B,KAAKE,sBAAwB,EAEzD,OAAOC,KAAKC,MAAMH,K,oBAUpB,WACE,MAA+BD,KAAKL,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,eAACV,EAAD,WACE,cAAC0B,EAAD,CAASC,MAAM,wBAAf,SACE,cAACZ,EAAD,CACEC,QAAS0B,OAAOC,KAAKN,KAAKL,OAC1Bf,gBAAiBoB,KAAKJ,0BAI1B,cAACP,EAAD,CAASC,MAAM,aAAf,SACGU,KAAKE,qBAAuB,EAC3B,cAAChC,EAAD,CACEC,KAAOA,EACPC,QAAUA,EACVC,IAAMA,EACNC,MAAQ0B,KAAKE,qBACb3B,mBAAqByB,KAAKO,oCAG5B,cAACf,EAAD,CAAcC,QAAQ,+B,GAhDDe,aCHjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.87aa9f71.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  border: 1px solid #000;\r\n  justify-content: center;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  text-align: center;\r\n  width: 600px;\r\n\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: #fff;\r\n  box-shadow: 7px 7px 7px rgb(0 0 0 / 30%);\r\n  border-radius: 10px;\r\n  background-color: #d8bfd8;\r\n  border: none;\r\n`\r\n","import styled from '@emotion/styled'\r\n\r\nexport const List = styled.ul`\r\n  // text-align: left;\r\n  // margin-left: 35%;\r\n`\r\n\r\nexport const Item = styled.li`\r\n  font-weight: 500;\r\n  font-size: 17px;\r\n  line-height: 1.14;\r\n  letter-spacing: 0.03em;\r\n  margin-bottom: 10px;\r\n`\r\n","import { List, Item } from './Statistics.styled'\r\nimport PropTypes from 'prop-types'\r\nimport { ImSmile, ImSad, ImNeutral } from 'react-icons/im'\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <List>\r\n      <Item>\r\n        <ImSmile /> Good: {good}\r\n      </Item>\r\n      <Item>\r\n        <ImNeutral /> Neutral: {neutral}\r\n      </Item>\r\n      <Item>\r\n        <ImSad /> Bad: {bad}\r\n      </Item>\r\n      <Item>Total: {total}</Item>\r\n      <Item>Positive feedback: {positivePercentage}%</Item>\r\n    </List>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Button = styled.button`\r\n  margin-right: 15px;\r\n\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  width: 140px;\r\n  height: 45px;\r\n  line-height: 45px;\r\n  border-radius: 45px;\r\n  margin: 10px 20px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 11px;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  letter-spacing: 3px;\r\n  font-weight: 600;\r\n  color: #524f4e;\r\n  background: white;\r\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    color: rgb(24, 24, 24);\r\n    border: 1px solid rgb(198, 198, 198);\r\n    background: #f7f7f7 linear-gradient(#f7f7f7, #f1f1f1);\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n    cursor: pointer;\r\n  }\r\n`\r\n","import { Button } from './FeedbackOptions.styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <Button\r\n          key={option}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n          name={option}\r\n        >\r\n          {option}\r\n        </Button>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: 800;\r\n  font-size: 30px;\r\n  line-height: 1.19;\r\n  text-align: center;\r\n  letter-spacing: 0.03em;\r\n`\r\nexport const Wrapper = styled.div`\r\n  padding-top: 20px;\r\n`\r\n","import { Title, Wrapper } from './Section.styled'\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <Wrapper>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}\r\n","import { Component } from 'react'\r\nimport { Container } from './App.styled'\r\n\r\nimport Statistics from '../Statistics/Statistics'\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions'\r\nimport Section from '../Section/Section'\r\nimport Notification from '../Notification/Notification'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  }\r\n\r\n  countTotalFeedback() {\r\n    const { good, neutral, bad } = this.state\r\n    return (good + neutral + bad)\r\n\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const positiveFeedback =\r\n      (100 * this.state.good) / this.countTotalFeedback() || 0\r\n\r\n    return Math.round(positiveFeedback)\r\n  }\r\n\r\n  onLeaveFeedbackButton = (event) => {\r\n    const target = event.target\r\n    this.setState({\r\n      [target.name]: this.state.[target.name] + 1,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state\r\n    return (\r\n      <Container>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.onLeaveFeedbackButton}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Statistics\r\n              good= {good}\r\n              neutral= {neutral}\r\n              bad= {bad}\r\n              total= {this.countTotalFeedback()}\r\n              positivePercentage= {this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}